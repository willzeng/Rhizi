// Generated by CoffeeScript 1.6.3
/* This is the main file that constructs the client-side application*/


(function() {
  requirejs.config({
    baseUrl: "/core/",
    paths: {
      local: "."
    }
  });

  /*
  
  You need only require the Celestrium plugin.
  NOTE: it's module loads the globally defined standard js libraries
        like jQuery, underscore, etc...
  */


  require(["Celestrium"], function(Celestrium) {
    /*
    
    This dictionary defines which plugins are to be included
    and what their arguments are.
    
    The key is the requirejs path to the plugin.
    The value is passed to its constructor.
    */

    var plugins;
    plugins = {
      KeyListener: document.querySelector("body"),
      GraphModel: {
        nodeHash: function(node) {
          return node['_id'];
        },
        linkHash: function(link) {
          if (link['_id'] != null) {
            return link['_id'];
          } else {
            return 0;
          }
        }
      },
      GraphView: {},
      "local/Neo4jDataController": {},
      "local/WikiNetsDataProvider": {},
      NodeSelection: {},
      LinkSelection: {},
      "local/VisualSearch": {},
      "local/SimpleSearchBox": {},
      "local/NodeEdit": {},
      "local/AddNode": {},
      "local/TextAdder": {},
      "local/LinkEdit": {},
      "local/ToolBox": {},
      "local/TopBarCreate": {},
      DropdownMenu: {},
      Expander: {},
      LinkHover: {},
      MiniMap: {},
      "Sliders": {},
      "ForceSliders": {}
    };
    return Celestrium.init(plugins, function(instances) {
      return require(['global'], function(global) {
        var loadEverything, preSelectNode;
        loadEverything = function(nodes) {
          var node, _i, _len;
          for (_i = 0, _len = nodes.length; _i < _len; _i++) {
            node = nodes[_i];
            instances["GraphModel"].putNode(node);
          }
          if (global.preSelection !== false) {
            return preSelectNode();
          }
        };
        $.get('/get_default_nodes', loadEverything);
        instances["GraphView"].getLinkFilter().set("threshold", 0);
        return preSelectNode = function() {
          var node, prefiller, theNode, _i, _len, _ref;
          _ref = instances["GraphModel"].getNodes();
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            node = _ref[_i];
            if (node._id === "" + global.preSelection) {
              theNode = node;
            }
          }
          if (theNode != null) {
            instances["NodeSelection"].toggleSelection(theNode);
          }
          prefiller = '@' + theNode.name + ' ';
          $('#textAdder-input').val(prefiller);
          $('#textAdder-input').focus();
          return $('#textAdder-input')[0].setSelectionRange(prefiller.length, prefiller.length);
        };
      });
    });
  });

}).call(this);
